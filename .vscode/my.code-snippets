{
	// Place your Рабочая область CEM-Site snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// "${1|one,two,three|}"
	// Example:
	"Страница сайта": {
		"scope": "javascript,typescript",
		"prefix": "_newPage",
		"body": [
			"import {jsx,jsxFrag,getVariable,getStorage,makeDOM,timersStart,setValue,getValue,sendApi} from '@betarost/cemjs';",
			"import {checkAnswerApi} from '@src/functions.js';",
			"",
			"const startView = function () {",
			"const lang = getVariable('languages')[getStorage('lang')];",
			"const show = getValue('mainHeader', 'show');",
			"",
			"return (",
			"<div class={show && 'c-main__body' || 'c-main__body--noheader'}>",
			"</div>",
			")",
			"}",
			"",
			"const ID = '${1:mainBlock}'",
			"",
			"const defaultInit = async function () {",
			"setValue('mainHeader', 'show', ${2:true});",
			"setValue('mainFooter', 'show', ${3:true});",
			"$4",
			"}",
			"",
			"const afterInit = function () {",
			"}",
			"",
			"const init = async function (reload) {",
			"if (!reload){defaultInit();}",
			"await makeDOM(startView(), ID);",
			"if (!reload){afterInit();}",
			"}",
			"",
			"export default init;"
		],
		"description": ""
	},
	"Получение актуального языка": {
		"scope": "javascript,typescript",
		"prefix": "_getLang",
		"body": [
			"const lang = getVariable('languages')[getStorage('lang')];",
		],
		"description": "ппппп"
	},
	"svg иконка": {
		"scope": "javascript,typescript",
		"prefix": "_svg",
		"body": [
			"import svg from '@assets/svg/index.js';"
		],
		"description": ""
	},
	"images картинки": {
		"scope": "javascript,typescript",
		"prefix": "_img",
		"body": [
			"import images from '@assets/images/index.js';"
		],
		"description": ""
	},
	"Имопрт страницы сайта": {
		"scope": "javascript,typescript",
		"prefix": "_iPage",
		"body": [
			"import ${1:Name} from '@src/navigation/${2:Name}.js';"
		],
		"description": ""
	},
	"Имопрт вспомогательного компонента": {
		"scope": "javascript,typescript",
		"prefix": "_iElement",
		"body": [
			"import {${1:Name}} from '@src/navigation/${2:Name}.js';"
		],
		"description": ""
	},
	"Получить значение": {
		"scope": "javascript,typescript",
		"prefix": "_getValue",
		"body": [
			"getValue(ID, '${1:Переменная}')"
		],
		"description": ""
	},
	"Назначить значение": {
		"scope": "javascript,typescript",
		"prefix": "_setValue",
		"body": [
			"setValue(ID, '${1:Переменная}', ${2:Значение})"
		],
		"description": ""
	},
	"Консоль лог": {
		"scope": "javascript,typescript",
		"prefix": "_log",
		"body": [
			"console.log('=$RANDOM_HEX=',${1:Переменная})"
		],
		"description": ""
	}
}