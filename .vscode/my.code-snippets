{
	// Place your Рабочая область CEM-Site snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// "${1|one,two,three|}"
	// Example:
	"Создание нового блока": {
		"scope": "javascript,typescript",
		"prefix": "_newBlock",
		"body": [
			"import {jsx,jsxFrag,Variable} from '@betarost/cemjs';",
			"import svg from '@assets/svg/index.js';",
			"import images from '@assets/images/index.js';",
			"",
			"const $TM_FILENAME_BASE = function (data) {",
			"",
			"return (",
			"<div>",
			"$1",
			"</div>",
			")",
			"}",
			"",
			"export { $TM_FILENAME_BASE };"
		],
		"description": "Новый элемент/блок"
	},
	"Страница сайта": {
		"scope": "javascript,typescript",
		"prefix": "_newPage",
		"body": [
			"import {jsx,jsxFrag,init,initReload,Variable,sendApi} from '@betarost/cemjs';",
			"import svg from '@assets/svg/index.js';",
			"import images from '@assets/images/index.js';",
			"",
			"const start = function () {",
			"",
			"Variable.HeaderShow = false",
			"Variable.FooterShow = false",
			"",
			"init(",
			"",
			"async () => {",
			"",
			"},",
			"",
			"() => {",
			"return (",
			" <></>",
			")",
			" }",
			" )",
			"};",
			"",
			"export default start;"
		],
		"description": "Страница сайта"
	},
	"svg иконка": {
		"scope": "javascript,typescript",
		"prefix": "_svg",
		"body": [
			"import svg from '@assets/svg/index.js';"
		],
		"description": ""
	},
	"images картинки": {
		"scope": "javascript,typescript",
		"prefix": "_img",
		"body": [
			"import images from '@assets/images/index.js';"
		],
		"description": ""
	},
	"All helpers": {
		"scope": "javascript,typescript",
		"prefix": "_helpers",
		"body": [
			"import { If } from '@component/helpers/All.js';"
		],
		"description": ""
	},
	"Имопрт страницы сайта": {
		"scope": "javascript,typescript",
		"prefix": "_iPage",
		"body": [
			"import ${1:Name} from '@src/navigation/${2:Name}.js';"
		],
		"description": ""
	},
	"Имопрт вспомогательного Элемента": {
		"scope": "javascript,typescript",
		"prefix": "_iElem",
		"body": [
			"import {${1:Name}} from '@component/element/${2:Name}.js';"
		],
		"description": "Имопрт вспомогательного Элемента"
	},
	"Имопрт вспомогательного блока": {
		"scope": "javascript,typescript",
		"prefix": "_iBlock",
		"body": [
			"import {${1:Name}} from '@component/blocks/${2:Name}.js';"
		],
		"description": ""
	},
	"Консоль лог": {
		"scope": "javascript,typescript",
		"prefix": "_log",
		"body": [
			"console.log('=$RANDOM_HEX=',${1:Переменная})"
		],
		"description": ""
	},
	"Перебор массива": {
		"scope": "javascript,typescript",
		"prefix": "_map",
		"body": [
			"{${1:Переменная}.map((item,index) => {",
			"return (",
			"<></>",
			")",
			"})}"
		],
		"description": ""
	}
}